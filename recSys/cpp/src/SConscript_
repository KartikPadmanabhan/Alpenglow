import os
import sys

def check_gpp(cpp_command):
  conf = Configure(Environment(CXX=cpp_command))
  result = conf.CheckCXX()
  conf.Finish()
  return result

normal_flags = ['-Wall', '-O2', '-fPIC', '-Wno-deprecated', '-Wno-reorder','-mfpmath=sse,387', '-funroll-loops' ,'-fomit-frame-pointer' , '-lpthread', '-msse3'  , '-D_LARGEFILE_SOURCE' , '-D_FILE_OFFSET_BITS=64']

debug_flags = ['-ggdb', '-Wall', '-fPIC', '-Wno-deprecated'  ,'-mfpmath=sse,387', '-funroll-loops' ,'-fomit-frame-pointer' , '-lpthread', '-msse3'  , '-D_LARGEFILE_SOURCE' , '-D_FILE_OFFSET_BITS=64']
profile_flags = ['-pg', '-Wall', '-O2', '-fPIC', '-Wno-deprecated'  ,'-mfpmath=sse,387', '-funroll-loops' , '-lpthread', '-msse3'  , '-D_LARGEFILE_SOURCE' , '-D_FILE_OFFSET_BITS=64']

gpp='g++'


if check_gpp('g++-4.8'):
  gpp = 'g++-4.8'
  normal_flags += ['-std=c++11', '-Wno-error=delete-non-virtual-dtor']
  debug_flags += ['-std=c++11', '-Wno-error=delete-non-virtual-dtor']
  profile_flags += ['-std=c++11', '-Wno-error=delete-non-virtual-dtor']
if check_gpp('g++-4.7'):
  gpp = 'g++-4.7'
  normal_flags += ['-std=c++11', '-Wno-error=delete-non-virtual-dtor']
  debug_flags += ['-std=c++11', '-Wno-error=delete-non-virtual-dtor']
  profile_flags += ['-std=c++11', '-Wno-error=delete-non-virtual-dtor']
elif check_gpp('g++-4.6'):
  gpp = 'g++-4.6'
  normal_flags += ['-std=c++0x']
  debug_flags += ['-std=c++0x']
  profile_flags += ['-std=c++0x']
elif check_gpp('g++-4.4'):
  gpp = 'g++-4.4'
  normal_flags += ['-std=c++0x']
  debug_flags += ['-std=c++0x']
  profile_flags += ['-std=c++0x']
else:
  normal_flags += ['-std=c++0x']
  debug_flags += ['-std=c++0x']
  profile_flags += ['-std=c++0x']

#documentation: compile in debug mode using
#scons [-j30] -Q mode=debug
mode = ARGUMENTS.get('mode', 'normal')

if mode=="debug":
  env = Environment(
    CXX = gpp,
    CCFLAGS = debug_flags,
    CPPPATH = ['#.', '#../dep/gtest/include'],
    LIBPATH = ['#../dep/gtest/build', '/usr/local/lib'],
    LIBS = ['gtest', 'pthread']
  )
elif mode=="profile":
  env = Environment(
    CXX = gpp,
    CCFLAGS = profile_flags,
    CPPPATH = ['#.', '#../dep/gtest/include'],
    LIBPATH = ['#../dep/gtest/build', '/usr/local/lib'],
    LIBS = ['gtest', 'pthread']
  )
else: #if mode=="normal":
  env = Environment(
    CXX = gpp,
    CCFLAGS = normal_flags,
    CPPPATH = ['#.', '#../dep/gtest/include'],
    LIBPATH = ['#../dep/gtest/build', '/usr/local/lib'],
    LIBS = ['gtest', 'pthread']
  )

testenv = Environment(
  CXX = gpp,
  CCFLAGS = debug_flags,
  CPPPATH = ['#.'],
  LIBPATH = [ '/usr/lib', '/usr/local/lib'],
  LIBS = ['pthread']
)

env.Object(Glob('*.cpp'))

SConscript(['main/online_recommender/SConscript',
            'main/recommender_data/SConscript',
            'main/online_experiment/SConscript',
            'main/offline_experiment/SConscript',
            'main/online_predictor/SConscript',
            'main/ranking/SConscript',
            'main/offline_evaluators/SConscript',
            'main/utils/SConscript',
            'main/influence_computer/SConscript',
            'main/geo_factors/SConscript',
            'main/models/SConscript',
            'main/filters/SConscript',
            'main/updaters/SConscript',
            'main/implicit_data_creator/SConscript',
            'main/online_data_updater/SConscript',
            'main/negative_sample_generators/SConscript',
            'main/time_frame_data/SConscript',
            'main/gradient_computers/SConscript',
            'main/gradient_computers/variance_approximators/SConscript',
            'main/online_learners/SConscript',
            'main/offline_learners/SConscript',
            'main/statistics/SConscript',
            'main/objectives/SConscript',
            'main/factories/SConscript',
            'main/recommender_static/SConscript',
            'main/tools/SConscript',
            'main/loggers/SConscript',
#            'main/geo_model_tools/SConscript',
            'test/offline_experiment/SConscript',
            'test/time_frame_data/SConscript',
            'test/models/SConscript',
            'test/filters/SConscript',
            'test/online_predictor/SConscript',
            'test/online_learners/SConscript',
            'test/offline_learners/SConscript',
            'test/gradient_computers/SConscript',
            'test/objectives/SConscript',
            'test/utils/SConscript',
            'test/ranking/SConscript',
            'test/negative_sample_generators/SConscript',
            'test/recommender_data/SConscript',
            'test/influence_computer/SConscript',
            'test/offline_evaluators/SConscript',
            'test/geo_factors/SConscript'], exports = ['env'])
