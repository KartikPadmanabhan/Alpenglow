import alpenglow as prs
import alpenglow.Getter as rs
import alpenglow.experiments
import alpenglow.evaluation
import pandas as pd
import math


class TestFactorModelExperiment:
    def test_factorModelExperiment(self):
        factorModelExperiment = alpenglow.experiments.FactorModelExperiment(
            top_k=100,
            seed=254938879,
            dimension=10,
            learning_rate=0.1,
            negative_rate=10
        )
        facRankings = factorModelExperiment.run("python/test_alpenglow/test_data_4", experimentType="online_id", verbose=True)
        assert facRankings.top_k == 100
        assert [i.rank for i in facRankings.logs] == [102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 1, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 1, 102, 102, 1, 102, 102, 102, 102, 102, 102, 102, 31, 102, 102, 102, 102, 102, 102, 102, 102, 2, 102, 102, 102, 15, 19, 8, 102, 102, 8, 102, 4, 102, 102, 102, 102, 102, 102, 16, 102, 26, 9, 39, 102, 102, 102, 102, 102, 102, 25, 102, 8, 102, 50, 102, 102, 102, 56, 102, 102, 20, 102, 38, 22, 102, 102, 102, 102, 102, 102, 38, 102, 6, 37, 102, 34, 24, 31, 55, 102, 102, 37, 102, 102, 102, 33, 6, 22, 7, 102, 45, 10, 102, 102, 15, 50, 102, 102, 102, 55, 10, 4, 102, 32, 70, 53, 61, 4, 21, 4, 102, 21, 102, 102, 63, 61, 11, 102, 12, 7, 61, 61, 20, 0, 102, 55, 102, 102, 73, 102, 26, 56, 102, 39, 19, 33, 57, 64, 102, 38, 102, 102, 63, 102, 102, 102, 102, 39, 102, 4, 24, 102, 102, 102, 102, 79, 83, 79, 102, 102, 6, 102, 3, 102, 74, 56, 32, 82, 102, 102, 12, 23, 102, 60, 87, 82, 13, 44, 12, 102, 102, 102, 102, 19, 102, 70, 102, 3, 102, 62, 93, 102, 102, 34, 3, 60, 40, 102, 102, 97, 77, 47, 54, 102, 36, 102, 82, 82, 56, 63, 2, 90, 25, 102, 102, 102, 102, 102, 41, 93, 102, 35, 62, 0, 72, 73, 102, 10, 100, 33, 25, 102, 102, 100, 102, 91, 61, 99, 102, 43, 19, 56, 85, 100, 0, 102, 35, 81, 102, 102, 102, 102, 73, 6, 7, 102, 102, 55, 102, 18, 25, 102, 16, 100, 82, 76, 100, 21, 102, 102, 102, 91, 102, 41, 12, 102, 100, 100, 102, 102, 102, 102, 100, 58, 97, 65, 12, 32, 98, 18, 102, 102, 102, 102, 42, 102, 6, 102, 24, 102, 1, 102, 100, 75, 2, 102, 100, 32, 100, 67, 89, 102, 63, 4, 102, 85, 102, 87, 100, 6, 9, 100, 102, 10, 29, 102, 100, 102, 4, 7, 100, 52, 69, 100, 100, 102, 97, 2, 102, 102, 77, 100, 2, 37, 102, 102, 102, 32, 64, 102, 9, 100, 102, 100, 90, 102, 87, 100, 21, 17, 78, 25, 77, 73, 102, 40, 67, 25, 100, 70, 85, 102, 102, 38, 40, 102, 100, 102, 70, 102, 78, 100, 15, 102, 102, 40, 100, 102, 67, 102, 102, 102, 102, 102, 6, 5, 15, 64, 100, 102, 100, 86, 55, 102, 7, 102, 2, 102, 76, 100, 33, 102, 102, 11, 102, 17, 87, 61, 88, 87, 50, 100, 79, 100, 71, 72, 66, 37, 76, 38, 82, 45, 100, 102, 71, 46, 102, 100, 91, 69, 100, 81, 4, 17, 3, 100, 62, 4, 100, 102, 11, 102, 79, 102, 93, 102, 81, 100, 102, 102, 102, 93, 102, 100, 100, 68, 84, 100, 102, 47, 6, 100, 17, 102, 102, 100, 9, 102, 81, 100, 44, 100, 11, 47, 100, 19, 102, 100, 45, 36, 61, 100, 100, 100, 100, 80, 100, 100, 102, 100, 6, 100, 27, 18, 102, 102, 61, 102, 22, 100, 102, 83, 102, 102, 100, 91, 102, 100, 2, 100, 84, 102, 102, 100, 100, 100, 13, 102, 78, 100, 37, 100, 100, 100, 102, 100, 100, 100, 100, 40, 90, 102, 100, 102, 96, 102, 100, 102, 100, 100, 100, 55, 102, 81, 102, 47, 100, 102, 102, 100, 100, 8, 102, 0, 17, 83, 31, 102, 99, 100, 102, 100, 102, 17, 67, 100, 26, 31, 13, 30, 102, 100, 102, 56, 68, 88, 100, 100, 39, 102, 100, 102, 56, 102, 102, 100, 100, 100, 27, 102, 27, 67, 100, 100, 100, 39, 56, 100, 100, 100, 100, 32, 86, 102, 102, 99, 102, 102, 100, 102, 12, 100, 102, 102, 88, 44, 52, 100, 100, 102, 69, 27, 102, 47, 102, 100, 17, 39, 100, 100, 26, 100, 100, 100, 24, 102, 100, 84, 17, 55, 100, 91, 100, 94, 100, 72, 100, 102, 100, 100, 102, 34, 102, 51, 62, 100, 100, 102, 79, 100, 100, 9, 0, 100, 100, 77, 100, 102, 102, 100, 0, 102, 30, 100, 85, 102, 40, 100, 100, 100, 100, 80, 102, 102, 100, 100, 100, 17, 102, 100, 14, 96, 102, 100, 100, 100, 8, 76, 100, 100, 100, 64, 32, 100, 23, 100, 100, 2, 100, 7, 102, 86, 25, 100, 8, 100, 102, 100, 90, 2, 81, 100, 58, 25, 47, 102, 100, 25, 69, 80, 102, 100, 58, 102, 102, 78, 100, 100, 8, 55, 100, 102, 23, 37, 100, 7, 102, 92, 100, 32, 63, 102, 50, 77, 15, 100, 100, 7, 9, 31, 27, 100, 65, 100, 100, 100, 72, 100, 1, 100, 100, 7, 100, 67, 75, 59, 75, 82, 100, 14, 100, 24, 100, 24, 100, 102, 102, 100, 102, 102, 14, 80, 100, 102, 100, 100, 100, 37, 100, 100, 4, 100, 102, 10, 100, 102, 102, 100, 100, 100, 100, 102, 35, 48, 100, 100, 100, 84, 100, 100, 14, 55, 102, 100, 34, 102, 102, 7, 100, 100, 89, 27, 102, 100, 100, 100, 102, 31, 11, 79, 77, 86, 67, 2, 100, 1, 69, 34, 100, 100, 100, 34, 64, 102, 100, 24, 18, 102, 34, 18, 94, 23, 47, 100, 102, 100, 100, 100, 102, 100, 102, 100, 100, 100, 100, 89, 23, 102, 100, 100, 98, 34, 102, 102, 100, 100, 16, 102, 23, 100, 26, 86, 102, 100, 100, 76, 100, 100, 102, 34, 59, 102, 102, 9, 102, 1, 102, 100, 100, 89, 30, 4, 100, 100, 100, 100, 40, 57, 86, 26, 102, 50, 100, 102, 1, 14, 86, 100, 100, 100, 92, 41, 100, 64, 100, 86, 100, 0, 14, 50, 100, 100, 100, 102, 100, 100, 64, 100, 11, 61, 102, 91, 14, 100, 72, 55, 100, 69, 100, 25, 99, 102]

        ranks = [i.rank for i in facRankings.logs]
        dcg = alpenglow.evaluation.DcgScore(facRankings).cumulative()
        dcgs = [math.log(2) / math.log(r + 2) if r < 100 else 0 for r in ranks]
        assert dcg - sum(dcgs) / len(dcgs) < 0.000000001

    def test_factorModelExperiment_2(self):
        data = pd.read_csv(
            "python/test_alpenglow/test_data_4",
            sep=' ',
            header=None,
            names=['time', 'user', 'item', 'id', 'score', 'eval']
        )
        factorModelExperiment = alpenglow.experiments.FactorModelExperiment(
            top_k=100,
            seed=254938879,
            dimension=10,
            learning_rate=0.1,
            negative_rate=10
        )
        facRankings = factorModelExperiment.run(data, verbose=True)
        assert facRankings.top_k == 100
        assert [i.rank for i in facRankings.logs] == [102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 1, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 1, 102, 102, 1, 102, 102, 102, 102, 102, 102, 102, 31, 102, 102, 102, 102, 102, 102, 102, 102, 2, 102, 102, 102, 15, 19, 8, 102, 102, 8, 102, 4, 102, 102, 102, 102, 102, 102, 16, 102, 26, 9, 39, 102, 102, 102, 102, 102, 102, 25, 102, 8, 102, 50, 102, 102, 102, 56, 102, 102, 20, 102, 38, 22, 102, 102, 102, 102, 102, 102, 38, 102, 6, 37, 102, 34, 24, 31, 55, 102, 102, 37, 102, 102, 102, 33, 6, 22, 7, 102, 45, 10, 102, 102, 15, 50, 102, 102, 102, 55, 10, 4, 102, 32, 70, 53, 61, 4, 21, 4, 102, 21, 102, 102, 63, 61, 11, 102, 12, 7, 61, 61, 20, 0, 102, 55, 102, 102, 73, 102, 26, 56, 102, 39, 19, 33, 57, 64, 102, 38, 102, 102, 63, 102, 102, 102, 102, 39, 102, 4, 24, 102, 102, 102, 102, 79, 83, 79, 102, 102, 6, 102, 3, 102, 74, 56, 32, 82, 102, 102, 12, 23, 102, 60, 87, 82, 13, 44, 12, 102, 102, 102, 102, 19, 102, 70, 102, 3, 102, 62, 93, 102, 102, 34, 3, 60, 40, 102, 102, 97, 77, 47, 54, 102, 36, 102, 82, 82, 56, 63, 2, 90, 25, 102, 102, 102, 102, 102, 41, 93, 102, 35, 62, 0, 72, 73, 102, 10, 100, 33, 25, 102, 102, 100, 102, 91, 61, 99, 102, 43, 19, 56, 85, 100, 0, 102, 35, 81, 102, 102, 102, 102, 73, 6, 7, 102, 102, 55, 102, 18, 25, 102, 16, 100, 82, 76, 100, 21, 102, 102, 102, 91, 102, 41, 12, 102, 100, 100, 102, 102, 102, 102, 100, 58, 97, 65, 12, 32, 98, 18, 102, 102, 102, 102, 42, 102, 6, 102, 24, 102, 1, 102, 100, 75, 2, 102, 100, 32, 100, 67, 89, 102, 63, 4, 102, 85, 102, 87, 100, 6, 9, 100, 102, 10, 29, 102, 100, 102, 4, 7, 100, 52, 69, 100, 100, 102, 97, 2, 102, 102, 77, 100, 2, 37, 102, 102, 102, 32, 64, 102, 9, 100, 102, 100, 90, 102, 87, 100, 21, 17, 78, 25, 77, 73, 102, 40, 67, 25, 100, 70, 85, 102, 102, 38, 40, 102, 100, 102, 70, 102, 78, 100, 15, 102, 102, 40, 100, 102, 67, 102, 102, 102, 102, 102, 6, 5, 15, 64, 100, 102, 100, 86, 55, 102, 7, 102, 2, 102, 76, 100, 33, 102, 102, 11, 102, 17, 87, 61, 88, 87, 50, 100, 79, 100, 71, 72, 66, 37, 76, 38, 82, 45, 100, 102, 71, 46, 102, 100, 91, 69, 100, 81, 4, 17, 3, 100, 62, 4, 100, 102, 11, 102, 79, 102, 93, 102, 81, 100, 102, 102, 102, 93, 102, 100, 100, 68, 84, 100, 102, 47, 6, 100, 17, 102, 102, 100, 9, 102, 81, 100, 44, 100, 11, 47, 100, 19, 102, 100, 45, 36, 61, 100, 100, 100, 100, 80, 100, 100, 102, 100, 6, 100, 27, 18, 102, 102, 61, 102, 22, 100, 102, 83, 102, 102, 100, 91, 102, 100, 2, 100, 84, 102, 102, 100, 100, 100, 13, 102, 78, 100, 37, 100, 100, 100, 102, 100, 100, 100, 100, 40, 90, 102, 100, 102, 96, 102, 100, 102, 100, 100, 100, 55, 102, 81, 102, 47, 100, 102, 102, 100, 100, 8, 102, 0, 17, 83, 31, 102, 99, 100, 102, 100, 102, 17, 67, 100, 26, 31, 13, 30, 102, 100, 102, 56, 68, 88, 100, 100, 39, 102, 100, 102, 56, 102, 102, 100, 100, 100, 27, 102, 27, 67, 100, 100, 100, 39, 56, 100, 100, 100, 100, 32, 86, 102, 102, 99, 102, 102, 100, 102, 12, 100, 102, 102, 88, 44, 52, 100, 100, 102, 69, 27, 102, 47, 102, 100, 17, 39, 100, 100, 26, 100, 100, 100, 24, 102, 100, 84, 17, 55, 100, 91, 100, 94, 100, 72, 100, 102, 100, 100, 102, 34, 102, 51, 62, 100, 100, 102, 79, 100, 100, 9, 0, 100, 100, 77, 100, 102, 102, 100, 0, 102, 30, 100, 85, 102, 40, 100, 100, 100, 100, 80, 102, 102, 100, 100, 100, 17, 102, 100, 14, 96, 102, 100, 100, 100, 8, 76, 100, 100, 100, 64, 32, 100, 23, 100, 100, 2, 100, 7, 102, 86, 25, 100, 8, 100, 102, 100, 90, 2, 81, 100, 58, 25, 47, 102, 100, 25, 69, 80, 102, 100, 58, 102, 102, 78, 100, 100, 8, 55, 100, 102, 23, 37, 100, 7, 102, 92, 100, 32, 63, 102, 50, 77, 15, 100, 100, 7, 9, 31, 27, 100, 65, 100, 100, 100, 72, 100, 1, 100, 100, 7, 100, 67, 75, 59, 75, 82, 100, 14, 100, 24, 100, 24, 100, 102, 102, 100, 102, 102, 14, 80, 100, 102, 100, 100, 100, 37, 100, 100, 4, 100, 102, 10, 100, 102, 102, 100, 100, 100, 100, 102, 35, 48, 100, 100, 100, 84, 100, 100, 14, 55, 102, 100, 34, 102, 102, 7, 100, 100, 89, 27, 102, 100, 100, 100, 102, 31, 11, 79, 77, 86, 67, 2, 100, 1, 69, 34, 100, 100, 100, 34, 64, 102, 100, 24, 18, 102, 34, 18, 94, 23, 47, 100, 102, 100, 100, 100, 102, 100, 102, 100, 100, 100, 100, 89, 23, 102, 100, 100, 98, 34, 102, 102, 100, 100, 16, 102, 23, 100, 26, 86, 102, 100, 100, 76, 100, 100, 102, 34, 59, 102, 102, 9, 102, 1, 102, 100, 100, 89, 30, 4, 100, 100, 100, 100, 40, 57, 86, 26, 102, 50, 100, 102, 1, 14, 86, 100, 100, 100, 92, 41, 100, 64, 100, 86, 100, 0, 14, 50, 100, 100, 100, 102, 100, 100, 64, 100, 11, 61, 102, 91, 14, 100, 72, 55, 100, 69, 100, 25, 99, 102]

        ranks = [i.rank for i in facRankings.logs]
        dcg = alpenglow.evaluation.DcgScore(facRankings).cumulative()
        dcgs = [math.log(2) / math.log(r + 2) if r < 100 else 0 for r in ranks]
        assert dcg - sum(dcgs) / len(dcgs) < 0.000000001
